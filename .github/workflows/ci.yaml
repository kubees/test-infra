name: CI Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  TF_VERSION: 1.3.0
  TFSEC_VERSION: "latest"

jobs:
  terraform_validations:
    name: Terraform validations
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check -diff -recursive && echo "all good!"
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: |
          terraform init
          terraform validate -no-color
        continue-on-error: true

      - name: tfsec
        id: tfsec_report
        run: |
          wget -O - -q "$(wget -q https://api.github.com/repos/aquasecurity/tfsec/releases/${TFSEC_VERSION} -O - | grep -o -E "https://.+?tfsec-linux-amd64" | head -n1)" > tfsec
          install tfsec /usr/local/bin/
          tfsec --soft-fail --exclude-downloaded-modules
          tfsec --exclude-downloaded-modules --minimum-severity medium >/dev/null 2>&1
        continue-on-error: true

      - name: tfsec_commenter
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          github_token: ${{ github.token }}
          tfsec_args: --soft-fail --minimum-severity medium
        continue-on-error: true

      - name: Update Pull Request
        id: report_pr
        uses: actions/github-script@v6
        env:
          FMT: "${{ steps.fmt.outputs.stdout }}"
          VALIDATE: "${{ steps.validate.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style ðŸ–Œ\`${{ steps.fmt.outcome }}\`
            <details><summary>Show Details</summary>
            \`\`\`\n
            ${process.env.FMT}
            \`\`\`
            </details>
            #### Terraform Validation ðŸ¤–\`${{ steps.validate.outcome }}\`
            <details><summary>Show Details</summary>
            \`\`\`\n
            ${process.env.VALIDATE}
            \`\`\`
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: CI Status
        if: steps.fmt.outcome == 'failure' || steps.tfsec_report.outcome == 'failure' || steps.validate.outcome == 'failure'
        run: exit 1
